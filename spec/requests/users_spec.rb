require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/users', type: :request do
  # This should return the minimal set of attributes required to create a valid
  # User. As you add validations to User, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    {
      name: 'Amira',
      email: 'amira@gmail.com',
      password: '123456'
    }
  end

  let(:invalid_attributes) do
    {
      name: '',
      email: '',
      password: ''
    }
  end

  describe 'GET /new' do
    it 'renders a successful response' do
      get new_user_session_path
      expect(response).to be_successful
    end
  end


  describe 'POST /create' do
    context 'with valid parameters' do
      it 'create User' do
        get new_user_registration_path, params: { user: valid_attributes }
        expect(response).to be_successful
      end
    end

    context 'with invalid parameters' do
      it 'does not create a new User' do
        expect do
          get new_user_registration_path, params: { user: invalid_attributes }
        end.to change(User, :count).by(0)
      end

      it "renders a successful response (i.e. to display the 'new' template)" do
        get new_user_registration_path, params: { user: invalid_attributes }
        expect(response).to be_successful
      end
    end
  end

  describe 'DELETE /destroy' do
    it 'redirects to the root path' do
      User.create! valid_attributes
      delete destroy_user_session_path
      expect(response).to redirect_to(root_path)
    end
  end
end
